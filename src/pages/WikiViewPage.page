<apex:page docType="html-5.0" showHeader="true" sidebar="false" standardStylesheets="false" controller="WikiViewPageController">
    <apex:includeScript value="{!URLFOR($Resource.rgraphLibs, 'libraries/RGraph.common.core.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.rgraphLibs, 'libraries/RGraph.common.dynamic.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.rgraphLibs, 'libraries/RGraph.bar.js')}"/>

    <apex:includeScript value="{!URLFOR($Resource.rgraphLibs, 'libraries/RGraph.common.effects.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.rgraphLibs, 'libraries/RGraph.drawing.text.js')}"/>

    <apex:includeScript value="{!URLFOR($Resource.rgraphLibs, 'libraries/RGraph.common.key.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.rgraphLibs, 'libraries/RGraph.drawing.rect.js')}"/>

    <apex:includeScript value="{!URLFOR($Resource.rgraphLibs, 'libraries/jquery.min.js')}"/>
    <style>
        .content {
            padding: 0 25px;
            margin: 0 auto;
            width: 940px;
            border: 0;
            font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
            font-size: 14px;
            line-height: 20px;
            color: #333333;
            background-color: #ffffff;
        }

        .page-body {
            padding-bottom: 15px;
        }

        #force .page-header h1 {
            color: #5a5a5a;
            font-size: 38.5px;
        }

        .page-metadata {
            font-size: 12px;
            padding-left: 10px;
            padding-top: 12px;
        }
    </style>

    <script>
        var likeVar = 0;
        var unlikeVar = 0;
        var IsVoted = false;        

        $(document).ready(function($) {

            new Editor($("#text-input"), $("#page-body"));

            $("#showOrHideVote").click(function(){
                toggleVoteDiv();
            });
            likeVar = {!PubPage.WikiPageVersion.LikeVotes__c};
            unlikeVar = {!PubPage.WikiPageVersion.UnlikeVotes__c};
            IsVoted = Boolean({!IsVoted});
            DrawMainChart();
            

        });


        function Editor(input, preview)
        {
            this.update = function () {
              preview.html(markdown.toHTML(input.val()));
            }
            input.editor = this;
            this.update();
        }
        
        function toggleVoteDiv()
        {
           var obj = $("#showOrHideVote");
           var obj2 = $("#theVoteDiv");
           if(obj.attr("rel") == "show")
           {
               obj.attr("rel","hide");
               obj.html("<button type='button' class='btn btn-default'>Hide Vote</button>");
                
               obj2.show();
           }
           else if(obj.attr("rel") == "hide")
           {
                obj.attr("rel","show");
                obj.html("<button type='button' class='btn btn-default'>Show Vote</button>");
                obj2.hide();
           }
        }
        function voteWikiPage(p1)
        {
            if(IsVoted == false)
            {
                if(p1 == 'like')
                {
                    likeVar = parseInt(likeVar) + 1;
                }
                else if(p1 == 'unlike')
                {
                    unlikeVar = parseInt(unlikeVar) + 1;
                }   
                vote(p1);        
                DrawMainChart();
                $("#voteButtons").html("<div>You have already voted the Page.</div>");
                IsVoted = true;
            }
            else
            {
                alert('can only vote once.');
            }
            
        }
        function DrawMainChart()
            {
                var ca = document.getElementById("cvs");
                var data = [likeVar,unlikeVar];
                var labels = ['like','unlike'];
                RGraph.Reset(ca);
                var bar = new RGraph.Bar('cvs', data)
                    .Set('labels', labels)
                    .Set('bevel', true)
                    .Set('title', 'Vote Result')
                    .Set('background.grid.autofit.numvlines', data.length)
                    .Draw();
            }
    </script>
    <apex:form>
        <apex:actionFunction name="vote" action="{!vote}" reRender="voteArea">
            <apex:param assignTo="{!VoteParam}" name="vote1" value=""/>
        </apex:actionFunction>
    </apex:form>
    <apex:composition template="WikiTemplate"><!--WikiTemplateWithBootstrap3-->
        <apex:define name="body" >
            <div class="content">
                <div id="force" >
                    <div class="navbar ">
                        <ul class="breadcrumb">
                            <li>
                                <a href="{!$Page.WikiHome}">Wiki Home</a>
                            </li>
                            <li>
                                <a href="/apex/wikispace?id={!PubPage.WikiPage.WikiSpace__c}">{!PubPage.WikiPage.WikiSpace__r.Name}</a> 
                            </li>
                            <li class="active">{!PubPage.WikiPageVersion.Title__c}</li>
                        </ul>
                    </div>
                    <div class="page-header">
                        <h1>{!PubPage.WikiPageVersion.Title__c}</h1>
                        <div class="page-metadata muted">
                            Added by
                            <a href="    /display/~vidya
                            " class="url fn confluence-userlink userlink-0" data-username="vidya" title="" data-user-hover-bound="true">
                                <apex:outputField value="{!PubPage.WikiPage.CreatedById}"/>
                            </a>,
                            last edited by
                            <a href="    /display/~rrobins
                            " class="url fn confluence-userlink userlink-1" data-username="rrobins" title="" data-user-hover-bound="true">
                                <apex:outputField value="{!PubPage.WikiPage.LastModifiedById}"/>
                            </a>
                            on
                            <apex:outputText value="{0, date, yyyy.MM.dd }">
                               <apex:param value="{!PubPage.WikiPage.LastPublishedDate__c}" />
                           </apex:outputText>
                        </div>
                    </div>

                    <button type="button" class="btn btn-primary btn-sm" onclick="window.location.href='/apex/WikiNewPage?id={!PubPage.WikiPage.Id}'">Edit Page</button><br/><br/>  
                    <hr/>                  
                    <div id="page-body" class="page-body"></div>                
                    <hr/>
                    <div>
                         <div rel="show">
                            <button type="button" id="showOrHideVote" class="btn btn-default">Show Vote</button>
                        </div>
                        <div id="theVoteDiv" style="display:none;" class="well well-sm">
                            <apex:outputPanel id="voteArea">
                            </apex:outputPanel>
                            <div>
                                <canvas id="cvs" width="250" height="250">[No canvas support]</canvas><br /> <br/> 
                            </div>
                            <apex:outputPanel rendered="{!Not(IsVoted)}">
                                <div style="margin-left:20px;" id="voteButtons">
                                    <button onclick="voteWikiPage('like')" class="btn btn-default">Like</button>
                                    <button onclick="voteWikiPage('unlike')" class="btn btn-default">Unlike</button>
                                </div>
                            </apex:outputPanel>
                            <apex:outputPanel rendered="{!IsVoted}"> 
                                <div>You have already voted the Page.</div>
                            </apex:outputPanel>                            
                        </div>
                    </div>
                </div>            
                <!-- Chatter -->
                <chatter:feedWithFollowers entityId="{!PubPage.WikiPage.Id}"/>
            </div>            
        </apex:define>
    </apex:composition>

    <!-- The data of markdown for js to parse -->
    <textarea id="text-input" rows="6" cols="60" style="display:none">
        <apex:outputText value="{!PubPage.WikiPageVersion.Body__c}" escape="false"/>
    </textarea>
    <div style="display:none;" id="voteDataDiv">
        <apex:repeat value="{!VoteData}" var="item">
            <div class="voteItem">
                <span class="span1">{!item.VersionNumber__c}</span><span class="span2"> {!item.LikeVotes__c}</span><span class="span3">{!item.UnlikeVotes__c}</span>
            </div>
        </apex:repeat>
    </div>
    
</apex:page>